
#user http;
worker_processes  1;

events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    keepalive_timeout  65;
    types_hash_max_size 4096;

    root /usr/local/nginx/html;

    server {
        listen 80;
        listen 2375;
        server_name  cool_hugle;

        resolver 127.0.0.11;

        location ~* ^/docker-api/([\w*-]+)/(.*)$ {
            proxy_http_version 1.1;
		
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';

            proxy_connect_timeout 60s;
            proxy_read_timeout 120s;
            proxy_send_timeout 60s;
            client_max_body_size 1m;
            proxy_set_header Host $http_host; # maybe use $http_host
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Host $http_host;
            proxy_set_header X-Forwarded-Port $server_port;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_buffering off;

            proxy_pass http://$1:2375/$2$is_args$args;
        }

        location ~* ^/http/([\w*-]+)/(.*)$ {
            proxy_http_version 1.1;
		
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';

            proxy_connect_timeout 60s;
            proxy_read_timeout 120s;
            proxy_send_timeout 60s;
            client_max_body_size 1m;
            proxy_set_header Host $http_host; # maybe use $http_host
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Host $http_host;
            proxy_set_header X-Forwarded-Port $server_port;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_buffering off;

            proxy_pass http://$1:80/$2$is_args$args;
        }

        location / {
            try_files $uri $uri/ /index.html;
        }
    }
}
